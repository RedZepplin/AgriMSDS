// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id        String    @id @default(cuid())
  name      String    @default("")
  email     String    @unique @default("")
  password  String
  posts     Post[]    @relation("Post_author")
  isAdmin   Boolean   @default(false)
  createdAt DateTime? @default(now())
}

model Post {
  id       String  @id @default(cuid())
  title    String  @default("")
  content  String  @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author   User?   @relation("Post_author", fields: [authorId], references: [id])
  authorId String? @map("author")
  tags     Tag[]   @relation("Post_tags")

  @@index([authorId])
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}

model Product {
  id                             String              @id @default(cuid())
  tradeName                      String              @default("")
  activeIngredient               ProductIngredient[] @relation("Product_activeIngredient")
  regCodes                       RegCode[]           @relation("RegCode_product")
  regCo                          RegCompany?         @relation("Product_regCo", fields: [regCoId], references: [id])
  regCoId                        String?             @map("regCo")
  from_ProductIngredient_product ProductIngredient[] @relation("ProductIngredient_product")

  @@index([regCoId])
}

model ChemicalClass {
  id                String                     @id @default(cuid())
  chemClass         String                     @unique @default("")
  moa               String                     @default("")
  rac               String?
  classCode         String                     @default("")
  activeIngredients ActiveIngredientRegister[] @relation("ActiveIngredientRegister_chemClass")
}

model ActiveIngredientRegister {
  id                                String              @id @default(cuid())
  activeIngredient                  String              @unique @default("")
  chemClass                         ChemicalClass?      @relation("ActiveIngredientRegister_chemClass", fields: [chemClassId], references: [id])
  chemClassId                       String?             @map("chemClass")
  notes                             String              @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  from_ProductIngredient_ingredient ProductIngredient[] @relation("ProductIngredient_ingredient")

  @@index([chemClassId])
}

model RegCompany {
  id          String    @id @default(cuid())
  regName     String    @default("")
  regNo       String    @default("")
  address     String    @default("")
  tel         String    @default("")
  website     String    @default("")
  regProducts Product[] @relation("Product_regCo")
}

model RegCode {
  id        String   @id @default(cuid())
  country   String   @default("")
  regCode   String   @default("")
  product   Product? @relation("RegCode_product", fields: [productId], references: [id])
  productId String?  @map("product")

  @@index([regCode])
  @@index([productId])
}

model ProductIngredient {
  id                            String                    @id @default(cuid())
  ingredient                    ActiveIngredientRegister? @relation("ProductIngredient_ingredient", fields: [ingredientId], references: [id])
  ingredientId                  String?                   @map("ingredient")
  product                       Product?                  @relation("ProductIngredient_product", fields: [productId], references: [id])
  productId                     String?                   @map("product")
  metric                        String?
  concentration                 Int?                      @default(100)
  from_Product_activeIngredient Product[]                 @relation("Product_activeIngredient")

  @@index([ingredientId])
  @@index([productId])
}
